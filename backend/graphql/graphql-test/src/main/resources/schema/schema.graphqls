# idempotent request
type Query {
    events: [EventVo!]!
    users: [UserVo!]!
    bookings: [BookingVo!]!
}

# modify request
type Mutation {
    createEvent(eventDto: EventDto!): EventVo!
    createUser(userDto: UserDto!): UserVo!
    bookEvent(eventId: ID!, userId: ID!): BookingVo!
    cancelBooking(bookingId: ID!): EventVo
}

# for create event
input EventDto {
    title: String!
    description: String!
    price: Float!
    date: String!
    userId: ID!
}

# for create user
input UserDto {
    email: String!
    password: String!
}

type UserVo {
    id: ID!
    email: String!
    password: String
    events: [EventVo!]
    bookings: [BookingVo!]
}

type EventVo {
    id: ID!
    title: String!
    description: String!
    price: Float!
    date: String!
    user: UserVo
}

type BookingVo {
    id: ID!
    event: EventVo!
    user: UserVo!
    createdAt: String!
    updatedAt: String!
}
